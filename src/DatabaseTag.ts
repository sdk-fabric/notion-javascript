/**
 * DatabaseTag automatically generated by SDKgen please do not edit this file manually
 * {@link https://sdkgen.app}
 */

import {TagAbstract, HttpRequest} from "sdkgen-client"
import {ClientException, UnknownStatusCodeException} from "sdkgen-client";

import {Database} from "./Database";
import {Error} from "./Error";
import {ErrorException} from "./ErrorException";

export class DatabaseTag extends TagAbstract {
    /**
     * Retrieves a database object — information that describes the structure and columns of a database — for a provided database ID. The response adheres to any limits to an integration’s capabilities.
     *
     * @returns {Promise<Database>}
     * @throws {ErrorException}
     * @throws {ClientException}
     */
    public async get(databaseId: string): Promise<Database> {
        const url = this.parser.url('/v1/databases/:database_id', {
            'database_id': databaseId,
        });

        let request: HttpRequest = {
            url: url,
            method: 'GET',
            headers: {
            },
            params: this.parser.query({
            }, [
            ]),
        };

        const response = await this.httpClient.request(request);
        if (response.ok) {
            return await response.json() as Database;
        }

        const statusCode = response.status;
        if (statusCode >= 0 && statusCode <= 999) {
            throw new ErrorException(await response.json() as Error);
        }

        throw new UnknownStatusCodeException('The server returned an unknown status code: ' + statusCode);
    }



}
